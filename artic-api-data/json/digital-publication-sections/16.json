{
    "id": 16,
    "api_model": "digital-publication-sections",
    "api_link": "https://api.artic.edu/api/v1/digital-publication-sections/16",
    "title": "Stability Isn't Everything It's Glitched Up to Be: An Interview with Jamie Fenton",
    "web_url": "https://nocache.www.artic.edu/digital-publications/36/perspectives-on-instability/16/stability-isnt-everything-its-glitched-up-to-be-an-interview-with-jamie-fenton",
    "copy": " Artist, game designer, and engineer Jamie Fenton (born 1954) created Digital TV Dinner in 1978 in collaboration with Raul Zaritsky and Dick Ainsworth. That work is now widely cited as the earliest example of Glitch Art, which intentionally creates malfunctions, interruptions, or their effects in digital and analog formats. For this project, Fenton glitched the video game console and computer platform Bally BASIC Arcade (or Astrocade), which she herself helped develop and for which she created games. In 1977 she had developed the Bally BASIC ROM operating system as an employee of the pivotal video game engineer and arcade contractor Dave Nutting Associates, and one year later she created (with professor Tom DeFanti and programmer Nola Donato) one of the earliest graphics programming languages, BASIC Zgrass, for the Bally Home Library Computer.[ref]Tom DeFanti joined the faculty at the University of Illinois at Chicago (UIC) in 1973, cofounding the Circle Graphics Habitat (later renamed the Electronic Visualization Lab, or EVL) with Daniel J. Sandin. DeFanti had started developing his programming language GRASS (Graphics Symbiosis System)\u2014a powerful computer graphics language\u2014while doing his PhD under Charles Csuri at the Ohio State University. DeFanti\u2019s GRASS led to Zgrass, the language collaboratively developed by DeFanti, Fenton, and Nola Donato.[/ref] Fenton also designed the hit 1981 science fiction arcade game GORF during her time as artist and programmer for Chicago-based Midway Manufacturing, a worldwide leader in the arcade cabinet market. Four years later, in 1985, she developed the software that would become MacroMind Director (later Macromedia Director, and then Adobe Director), a profoundly important application that enabled an entire genre of new media art and games through CD-ROM-based interactive art, internet-based web art, and Shockwave games, which led to Flash games. Notably, Fenton also worked with renowned computer scientist Alan Kay, and later Amazon, as well as many other companies, all while pursuing her own creative projects, from model train building to new media and Glitch Art. As a designer and developer of the technological systems themselves, Fenton glitches her own systems, expertly playing with their boundary states and pushing against their borders to capture unpredictable outcomes. Based in Chicago for much of her career, she has also contributed considerably and consistently to the formation of new media art communities in the city, especially in the 1970s. As a transgender woman, transitioning from male to female in the mid-1990s, Fenton has been active in transgender communities while working at the highest levels of technology development, computer programming, and creative software. As she notes in the edited transcription that follows, her transition marked a turning point in both her life and career. The largest scholarly inquiry into Fenton\u2019s work to date was conducted in conjunction with the exhibition and catalogue Chicago New Media, curated and written by jonCates. Organized by VGA Gallery and exhibited at Ars Electronica (September 5\u20139, 2019) and Gallery 400 at the University of Illinois, Chicago (November 1\u2013December 15, 2018), Chicago New Media traced the connections among new media, academia, and industry through the lens of Fenton\u2019s career. The exhibition featured both Fenton\u2019s Digital TV Dinner and Whitney Pow\u2019s Digital TV Breakfast (2018), a playable Glitch Art game that re-mediates Digital TV Dinner . For the interview that follows, Fenton spoke with jonCates and Jonathan Kinkley, curator and assistant curator (with Chaz Evans), respectively, of Chicago New Media . Additional quotations from Fenton are drawn from the international Chicago New Media Symposium held on November 1, 2018, at Gallery 400.[ref]The Chicago New Media Symposium panelists included Christiane Paul, adjunct curator of new media art, Whitney Museum of American Art; Oliver Grau, professor for image science, Danube University Krems, and a founder of the field of media-art history; Ellen Sandor, artist and coeditor of New Media Futures: The Rise of Women in the Digital Arts (Urbana, IL: University of Illinois Press, 2018); Daniel J. Sandin, professor emeritus, UIC School of Art and Art History, and cofounder and codirector of UIC\u2019s Electronic Visualization Laboratory; Jamie Fenton, software developer for systems used by artists in the exhibition; Tom DeFanti, senior research scientist, Calit2 at the University of California San Diego, and cofounder and codirector of the EVL; Sabrina Raaf, artist and associate professor at the UIC School of Art and Art History; and curator and organizer jonCates.[/ref]   jonCates and Jonathan Kinkley: Let\u2019s start with the Chicago New Media exhibition on the night of November 28, 2018, when you played Whitney Pow's Glitch Art game Digital TV Breakfast (fig. 1), which was based on your seminal Digital TV Dinner from 1978.[ref]Whitney Pow researches, writes on, and teaches queer and trans histories of games, software, computing, and Glitch Art. Pow is an independent game designer and developer, and they are assistant professor of Queer and Trans Media Studies in the Department of Media, Culture, and Communication at New York University.[/ref] What is it like to experience an art piece that is inspired by your work?   Jamie Fenton: I was delighted to meet Whitney and see this work\u2014I had just moved back to Chicago after living on the West Coast for thirty years and it was super cool. The exhibition really put the whole era and all these different groups from that time in context. With Digital TV Dinner (fig. 2), we discovered you could pull the cartridge out of the Bally Astrocade while it was running and something would happen![ref] Digital TV Dinner (1978), Jamie Fenton and Raul Zaritsky (video) and Dick Ainsworth (audio).[/ref] It wouldn't do any damage because we had put in enough protection. The game would still make legal NTSC\u2014I mean, if you turned the power on and off, of course, you'd get an honest-to-God glitch.[ref]NTSC stands for National Television Standards Committee, the group that originally developed the black-and-white and, later, color television system that is used in the United States, Japan, and many other countries.[/ref] But if you just took the cartridge out while executing code\u2014well, whatever that code was doing, it would keep on doing it. It would fill the screen with some sort of pattern. Usually it would look like a memory dump of some of the memory of the system, but it could be other things as well. What we discovered is something like LSD, or as though we put some electrodes into your brain and just gave you a random shock. In other words, you could take the cartridge out while the game was on and this would cause all kinds of interesting things to happen. So there\u2019s Glitch Art!   JC and JK: It\u2019s important for people to understand that you are the person who created all of it: the source code, the hardware, the glitch. You understood it at a very fundamental level, building the system that you are then manipulating and exploiting in ways that could surprise even you. Before you made Digital TV Dinner you had developed the Bally BASIC for the Astrocade. How did that come about? JF: I had dropped out of college to be a video game engineer and was employed by Dave Nutting Associates, first to do pinball machines. Then I switched over and started coding video games.[ref]Dave Nutting Associates, founded by Dave Nutting and Jeff Frederiksen in 1974, began working with Bally Manufacturing and Midway Manufacturing in 1975 and closed in 1984.[/ref] My first video game for Dave Nutting was Blackjack , which was a monument to Las Vegas even though the game never shipped (fig. 3). I did a couple of video games like 280 ZZZAP and Checkmate , both of which were relatively successful. They each took two months from start to finish, but nowadays two months is the length of a quality assurance cycle of a game! Then we thought, \u201cWouldn't it be nice to make a game for the home,\u201d so we started working on this thing that eventually was called the Bally Astrocade (fig. 4). We made two fateful decisions when we designed this hardware, doing two things differently than all the other game and hardware designers. First, we didn't insist that you turn the power off before you insert a cartridge; we actually put circuits in, called buffers, that tolerate having a memory card to the game cartridge inserted or removed. Second, we made the video that came out of the Bally Astrocade NTSC legal so it could be recorded on any video cassette recorder. You could actually just hook it up to the television transmitter that we broadcast with in the United States.[ref]The significance of this innovation cannot be underestimated, as it is what allowed for the display, broadcast, and\u2014most importantly for present purposes\u2014recording of the signals sent from the system. This allowed for the preservation of the media, which is why we have access to this work today.[/ref] No one else\u2019s games did that. I was good at optimizing and coming up with strange ways of doing things that you would never expect. I did this by imagining and adopting the psychology of someone who was living inside the computer.   The Bally Astrocade was quite ahead of its time. It had 24-color graphics memory, 160 by 102 pixels, with 2-bits per pixel, which at the time was considered profoundly powerful. We competed with the Atari 2600, which had much less memory and much less graphics power. Ours was actually a pretty advanced game system\u2014the first to have an actual frame buffer, which no other game of that era had until they released the Nintendo NES.[ref]Computers utilize frame buffers to store frames of visual information that the computer displays, such as pixel information used in computer games. Frame buffer capacities, and thereby computers\u2019 resolutions, increased dramatically during the 1970s.[/ref] Around the same time that we were starting to complete the design of the circuits, I flew out to California for a video game conference. When I was there I found a book called Computer Lib/Dream Machines by Ted Nelson.[ref]Theodore H. Nelson's self-published Computer Lib/Dream Machines (1974) is now widely understood to be \u201cthe most important book in the history of new media.\u201d See Noah Wardrip-Fruin and Nick Montfort, eds., The New Media Reader (Cambridge, MA: MIT Press, 2003), 301. Jamie Fenton was inspired by Computer Lib/Dream Machines to reach out to Tom DeFanti, who is featured in the book alongside Daniel J. Sandin. Nelson also taught as a lecturer at UIC from 1973 to 1976, and DeFanti and Nelson were roommates at the time Nelson finalized his book. Sandin, DeFanti, and Nelson worked together closely in the Chicago new media community, collaborating and connecting with Phil Morton, Bob Snyder, Jane Veeder, Gene Youngblood, and many others. Computer Lib/Dream Machines thereby served as Fenton\u2019s introduction to the Chicago new media communities, inspiring her to meet DeFanti and the others listed above. Although Nelson\u2019s book is widely known and respected, his work in the Chicago new media communities is not as well documented. Fenton's account in this interview provides insight on the formation of these communities.[/ref] I read it on the airplane ride back, and there was so much about Tom DeFanti that I became fascinated by what he had done.[ref]Fenton cites additional influences and inspirations including Olivia Jack\u2019s software project Hydra (2018\u2013present), the film Tron (1982), the game Lunar Lander (Atari, 1979), the film A Clockwork Orange (1971), the game Oregon Trail (1971), and The Whole Earth Catalog , which was published from 1968 to 1971.[/ref] I went in and met Tom DeFanti and got a tour of the Electronic Visualization Lab at the University of Illinois, Chicago. There was the Vector General and his PDP-11 and things like that.[ref]The Vector General, introduced in 1969, provided visual output to computers throughout the 1970s such as the PDP-11. (The Programmed Data Processor [PDP] was a computer manufactured by the Digital Equipment Corporation beginning in 1970.) Computer displays are now taken for granted because of devices with attached screens such as laptops and smartphones. When it was introduced, however, the Vector General provided new, powerful, and relatively affordable options to output computer-generated graphics onscreen. An example of computer graphics produced using a Vector General display (attached to a PDP-11) are the animated plans for the Rebel Alliance\u2019s attack on the first Death Star in the original 1977 Star Wars film, which were created by artist Larry Cuba. This computer animation sequence was produced at UIC on the same system that Fenton references in this interview, and Cuba coded the sequence in the GRASS programming language created by Tom DeFanti.[/ref] I decided to start taking one of his classes on advanced computer graphics, but I never paid any tuition\u2014I just crashed the thing. That got me in closer with the gang there, and Tom and I became friends. And he, of course, became aware of the work I was doing at Bally/Midway, so he eventually got pulled into helping us, and I got to work with him on a project called Zgrass.[ref]See Tom DeFanti, Jamie Fenton, and Nola Donato, \u201cBASIC Zgrass: A Sophisticated Graphics Language for the Bally Home Library Computer,\u201d ACM SIGGRAPH Computer Graphics (August 1978), https://doi.org/10.1145/965139.807366 .[/ref] I took a version of the BASIC language that somebody else had written and then adapted it so it would run on the TV and make simple animations\u2014drawing boxes, circles, and letters. And I threw the whole thing together in two weeks and made a demo program, which students at the School of the Art Institute of Chicago were then taught for a couple of years afterward. JC and JK: The most successful arcade game you developed is GORF , and there is an unpublished title known as Ms. GORF .[ref] GORF is an acronym for Galactic Orbiting Robot Force.[/ref] Can you share a bit about your concept for these projects? JF: The chips we designed for the Bally Astrocade had two modes: if you set it up one way it became a video game with a 4K frame rate buffer, and if you set it up another way it would have four times the bits and you could actually make a commercial game out of it. So that\u2019s when we made the RT1 system that was promoted by Tom DeFanti as an artistic computer, and I wound up creating GORF (fig. 5) and another game called The Adventures of Robby Roto . GORF started out as a Star Trek game and ended up a success, but Robby Roto was a flop, although it had a second life on the MAME system, which is a free video-game emulator that a lot of people use.[ref]The Multiple Arcade Machine Emulator (MAME) emulates older computer hardware in software, making older computer environments available on contemporary computer systems by running, as software, older or obsolete hardware. Antique arcade video game systems are now emulated through MAME on contemporary computers. MAME is therefore especially important to the preservation of video game histories.[/ref] The GORF character first appeared in a shooting-gallery, rifle-on-a-trackball game.   The high-end version of the Astrocade chip set went into these games. After Roto , I did a follow-up game called Ms. GORF (fig. 6), sort of like Ms. Pac-Man . I hadn\u2019t seen the movie Alien yet, but the idea was set in outer space and GORF would fight this thing that was reproducing, like the reproductive creature from Alien . One of the things it would do is paint pixels, so a character could paint pixels that blocked your shots, and there you had a free-form strategy game. We worked on this for maybe a year, and I kept a video log of my progress. Eventually they decided to change to a new generation of hardware that wasn\u2019t recordable, and all the progress stopped being captured, which is unfortunate because the game was canceled. I drew a tombstone on the floppy disks with RIP and the date the game ended, and they\u2019re now at the Computer History Museum [in Mountainview, California]. I still have the GORF source code disks.   JC and JK: In 1984 you created another platform, MacroMind (the predecessor to Macromedia and Adobe), which was an entirely new, interactive way of making art, animation, and music. How did you pivot from video games to MacroMind? JF: After Ms. GORF was canceled, I worked for a year or so porting games and writing code for the Commodore 64, and then the Macintosh came out. Marc Canter, Mark Pierce, and I all started MacroMind (fig. 7).[ref]MacroMind developed MacroMind VideoWorks (the precursor to MacroMind Director) to run on the Apple Macintosh computer. This software became the primary method of creating an entire genre of early new media art and games: the digital interactive art variously called CD-ROM art or simply multimedia art.[/ref] The powerful idea that led to this came from my experience seeing A Clockwork Orange when I was seventeen, after which I made a timeline diagram of the movie\u2014 where each scene was, and so on\u2014and tried to come up with a thematic analysis of the film. The diagram is very similar to the MacroMind VideoWorks (or MacroMind Director) timeline. I thought that if you can use a timeline to analyze a movie that somebody made, perhaps you could use a timeline to represent a movie you intend to make. Originally the program was called SoundVision and would let you do both audio and video production in one integrated environment with one integrated timeline. We\u2019d actually started developing that, but we had to abandon the effort when we realized the limits of the Macintosh computer memory. So we split the program into MusicWorks and VideoWorks, and MacroMind turned into a big smash hit because it was a media production system that anybody could use to create animated stuff. And that, of course, made me very famous.   JC and JK: How did you first get into computers, and what other influences did you have? JF: My dad taught me a little Fortran, and I brought the timeshare teletype computer home from math class in a suburb of Cincinnati. The first game I wrote for the computer was a version of craps. You\u2019d get the sevens and elevens and all that sort of stuff you do in a craps game, and the program tracked how much money you won. And if you wound up running out of money, a loan shark would loan you more money and then threaten to break your legs if you didn't pay it back. So you can see I sort of got into computer games early on. At the time, I was the reject kid\u2014too strange to fit in with everybody else. And what\u2019s funny was, in seventh grade everybody except me had already figured out that I was a girl in a boy\u2019s body. Eventually I decided to smoke cigarettes, grow my hair out, smoke grass, be a hippie, all those sorts of things. I hadn't figured out the transgender part at all. I knew I was bisexual, but I didn't know the trans part. I was very much a creature of the counterculture\u2014I would put on the hippie beads and everything, which, of course, would turn out to be a very common pathway for many transgender people. It was a different time. Computers were different then; they hadn\u2019t permeated everything. People did well making elaborate software projects, but there was also room to do little games, to do everything themselves. It was quite a different world then ... a different world.   Banner image: Detail of fig. 6. ",
    "author_display": "jonCates, Jonathan Kinkley, and Jamie Fenton",
    "digital_publication_id": 36,
    "source_updated_at": null,
    "updated_at": "2023-09-23T23:48:08-05:00",
    "timestamp": "2023-09-24T02:13:14-05:00"
}